[project]
name = "aiida-reoptimize"
version = "0.5.2"
description = "Algorithms for external optimization of crystal structures"
authors = [
    {name = "Anton Domnin",email = "a.v.daomnin@gmail.com"},
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11,<4"
dependencies = [
    "pymoo==0.6.1.3",
    "aiida-core (>=2.6.4,<3.0.0)",
    "mpds_client",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project.entry-points."aiida.workflows"]
# FleurSCF optimizers
"aiida_reoptimize.AdamFleurSCFOptimizer" = "aiida_reoptimize.workflows.Optimization.FleurSCF:AdamFleurSCFOptimizer"
"aiida_reoptimize.RMSpropFleurSCFOptimizer" = "aiida_reoptimize.workflows.Optimization.FleurSCF:RMSpropFleurSCFOptimizer"
"aiida_reoptimize.BFGSFleurSCFOptimizer" = "aiida_reoptimize.workflows.Optimization.FleurSCF:BFGSFleurSCFOptimizer"
"aiida_reoptimize.PyMOOFleurSCFOptimizer" = "aiida_reoptimize.workflows.Optimization.FleurSCF:PyMOOFleurSCFOptimizer"

#Crystal software optimizers
"aiida_reoptimize.AdamCrystalOptimizer" = "aiida_reoptimize.workflows.Optimization.Crystal:AdamCrystalOptimizer"
"aiida_reoptimize.CDGCrystalOptimizer" = "aiida_reoptimize.workflows.Optimization.Crystal:CDGCrystalOptimizer"
"aiida_reoptimize.RMSpropCrystalOptimizer" = "aiida_reoptimize.workflows.Optimization.Crystal:RMSpropCrystalOptimizer"
"aiida_reoptimize.BFGSCrystalOptimizer" = "aiida_reoptimize.workflows.Optimization.Crystal:BFGSCrystalOptimizer"
"aiida_reoptimize.PyMOOCrystalOptimizer" = "aiida_reoptimize.workflows.Optimization.Crystal:PyMOOCrystalOptimizer"

# Evaluators
"aiida_reoptimize.FleurSCFLatticeProblem" = "aiida_reoptimize.workflows.Evaluation.fleur_evaluators:FleurSCFLatticeProblem"
"aiida_reoptimize.FleurRelaxLatticeProblem" = "aiida_reoptimize.workflows.Evaluation.fleur_evaluators:FleurRelaxLatticeProblem"
"aiida_reoptimize.CrystalLatticeProblem" = "aiida_reoptimize.workflows.Evaluation.crystal_evaluation:CrystalLatticeProblem" 

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"